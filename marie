import tkinter as tk
from tkinter import messagebox
import json
import os

# File to store user data
DATA_FILE = "user_data.json"


class ToDoApp:
    def __init__(self, root):
        self.root = root
        self.root.title("To-Do List with Tree Growth")
        self.root.geometry("400x500")
        
        self.user_data = {}
        self.username = None

        self.init_login_window()

    def init_login_window(self):
        """Initial window for user login/signup."""
        self.login_frame = tk.Frame(self.root)
        self.login_frame.pack(pady=20)

        tk.Label(self.login_frame, text="Username:").grid(row=0, column=0)
        tk.Label(self.login_frame, text="Password:").grid(row=1, column=0)

        self.username_entry = tk.Entry(self.login_frame)
        self.username_entry.grid(row=0, column=1)
        self.password_entry = tk.Entry(self.login_frame, show="*")
        self.password_entry.grid(row=1, column=1)

        tk.Button(self.login_frame, text="Login", command=self.login).grid(row=2, column=0, columnspan=2, pady=10)
        tk.Button(self.login_frame, text="Sign Up", command=self.signup).grid(row=3, column=0, columnspan=2)

        # Load user data if the file exists
        if os.path.exists(DATA_FILE):
            with open(DATA_FILE, "r") as file:
                self.user_data = json.load(file)

    def signup(self):
        """Sign up a new user."""
        username = self.username_entry.get()
        password = self.password_entry.get()

        if username in self.user_data:
            messagebox.showerror("Error", "Username already exists!")
        else:
            self.user_data[username] = {"password": password, "tasks": [], "branches": 0}
            self.save_user_data()
            messagebox.showinfo("Success", "Account created! Please log in.")

    def login(self):
        """Login the user."""
        username = self.username_entry.get()
        password = self.password_entry.get()

        if username in self.user_data and self.user_data[username]["password"] == password:
            self.username = username
            self.login_frame.pack_forget()
            self.init_todo_window()
        else:
            messagebox.showerror("Error", "Invalid username or password!")

    def init_todo_window(self):
        """Main to-do list window with tree growth."""
        self.todo_frame = tk.Frame(self.root)
        self.todo_frame.pack(pady=10)

        self.task_listbox = tk.Listbox(self.todo_frame, height=10, width=40)
        self.task_listbox.grid(row=0, column=0, columnspan=2)

        self.load_tasks()

        self.task_entry = tk.Entry(self.todo_frame, width=30)
        self.task_entry.grid(row=1, column=0)
        tk.Button(self.todo_frame, text="Add Task", command=self.add_task).grid(row=1, column=1)

        tk.Button(self.todo_frame, text="Complete Task", command=self.complete_task).grid(row=2, column=0, columnspan=2, pady=10)

        # Create the canvas for the tree
        self.tree_canvas = tk.Canvas(self.root, width=400, height=200, bg="white")
        self.tree_canvas.pack()
        self.draw_tree()

    def add_task(self):
        """Add a new task to the list."""
        task = self.task_entry.get()
        if task:
            self.task_listbox.insert(tk.END, task)
            self.user_data[self.username]["tasks"].append(task)
            self.save_user_data()
            self.task_entry.delete(0, tk.END)

    def complete_task(self):
        """Mark a task as complete and grow the tree."""
        selected_task = self.task_listbox.curselection()
        if selected_task:
            task_index = selected_task[0]
            self.task_listbox.delete(task_index)
            del self.user_data[self.username]["tasks"][task_index]
            self.user_data[self.username]["branches"] += 1
            self.save_user_data()
            self.draw_tree()
        else:
            messagebox.showwarning("Warning", "Select a task to complete.")

    def save_user_data(self):
        """Save user data to the file."""
        with open(DATA_FILE, "w") as file:
            json.dump(self.user_data, file)

    def load_tasks(self):
        """Load tasks from the saved user data."""
        tasks = self.user_data[self.username]["tasks"]
        for task in tasks:
            self.task_listbox.insert(tk.END, task)

    def draw_tree(self):
        """Draw the tree with branches based on completed tasks."""
        self.tree_canvas.delete("all")
        # Draw trunk
        self.tree_canvas.create_line(200, 150, 200, 100, width=10)

        # Draw branches
        num_branches = self.user_data[self.username]["branches"]
        for i in range(num_branches):
            angle = 30 + (i * 30)  # Vary the angle
            length = 50
            x = 200
            y = 100
            end_x = x + length * (1 if i % 2 == 0 else -1)
            end_y = y - length
            self.tree_canvas.create_line(x, y, end_x, end_y, width=5)


if __name__ == "__main__":
    root = tk.Tk()
    app = ToDoApp(root)
    root.mainloop()

